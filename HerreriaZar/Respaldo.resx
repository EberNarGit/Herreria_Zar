<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>